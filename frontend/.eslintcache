[{"C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\index.js":"1","C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\App.js":"2","C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\components\\Entete.js":"3","C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\components\\Maincon.js":"4","C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\components\\Sidenav.js":"5","C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\components\\Displayer.js":"6","C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\Contexts\\Linkcontext.js":"7","C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\components\\Diagram.js":"8","C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\Contexts\\Modalcontext.js":"9","C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\components\\Connect.js":"10"},{"size":220,"mtime":1610922747000,"results":"11","hashOfConfig":"12"},{"size":490,"mtime":1612896164250,"results":"13","hashOfConfig":"12"},{"size":588,"mtime":1612744057019,"results":"14","hashOfConfig":"12"},{"size":239,"mtime":1612896228598,"results":"15","hashOfConfig":"12"},{"size":1136,"mtime":1612624603052,"results":"16","hashOfConfig":"12"},{"size":759,"mtime":1612614376093,"results":"17","hashOfConfig":"12"},{"size":957,"mtime":1612610962733,"results":"18","hashOfConfig":"12"},{"size":445,"mtime":1612618032993,"results":"19","hashOfConfig":"12"},{"size":371,"mtime":1612743741656,"results":"20","hashOfConfig":"12"},{"size":969,"mtime":1612945420739,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"w1yxuy",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\index.js",[],["46","47"],"C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\App.js",[],"C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\components\\Entete.js",[],"C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\components\\Maincon.js",[],"C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\components\\Sidenav.js",["48","49"],"import React, {useState, useContext} from 'react'\nimport {LinkContext} from '../Contexts/Linkcontext'\n\n\nconst Sidenav = () => {\n  const {value1, value2} = useContext(LinkContext);\n\n  //il sagit de recuper une array de array de json pour les liens de ma barre de navigation\n  const navlinks = value1\n  const data = navlinks[0]\n  console.log(data)\n\n\n  //pour pouvoir mettre a jour mon state a chaque fois que linfo change\n\n  const [clicked, setClicked] = value2\n\n  console.log(clicked)\n\n  \n  //recuperer dans une variable le nom du lien pour lutilliser pour recuperer les tables\n  \n  const handleClick = (e) =>{\n    //console.log(e.target.getAttribute('value'));\n     var appuie = e.target.getAttribute('value');\n\n     setClicked(appuie);\n\n    };\n\n   return (\n    <div className= \"navbar\">\n      <nav>\n        <h1>DATABASE TABLES</h1>\n      <ul>\n        {data.map((lien, index) =>( \n       <li key={index}><a className=\"lien\" href=\"#\" value={lien.table_name} onClick={handleClick}>{lien.table_name}</a></li>\n        ))};\n        </ul>\n         {/*<Displayer clicked ={clicked}/> */ }\n      </nav>\n    </div>\n  )\n}\n\nexport default Sidenav\n","C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\components\\Displayer.js",["50","51"],"import React, {useState, useEffect}from 'react'\nimport Diagram from './Diagram'\n\nconst Displayer = () => {\n  //ici je  recupere la valeur clicked de mon props \n\n  /*const clicked = props.clicked;\n  console.log(clicked);\n\n  const [table, getTableContents] = useState([]);\n\n\n   const  fetchtables = async() =>{\n\n    try {\n      const result = await fetch(`http://localhost:5000/singletable/${clicked}`);\n\n      const res = await result.json();\n\n      console.log(res);\n\n      getTableContents(res);\n\n    } catch (error) {\n      console.log(Error.message);\n    }\n\n    \n  }\n\n\n  useEffect(() =>{\n   fetchtables()\n  },[props.clicked]);\n\n  console.log(table); \n*/\n  return (\n    <div className=\"montreur\">\n      <Diagram/>\n    </div>\n  )\n}\n\nexport default Displayer\n","C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\Contexts\\Linkcontext.js",[],"C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\components\\Diagram.js",[],"C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\Contexts\\Modalcontext.js",[],"C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\components\\Connect.js",["52"],"import React, {useContext} from 'react'\r\nimport {Modalcontext} from '../Contexts/Modalcontext'\r\n\r\n\r\nconst Connect = () => {\r\n  const [showModal, setShowModal] = useContext(Modalcontext)\r\n\r\n  return (\r\n    <>\r\n    {showModal ?\r\n    <div className=\"modal-container\" action=\"\">\r\n    <form className=\"connect\">\r\n      <div className=\"head\">\r\n        <h1>Se Connecter</h1>\r\n      </div>\r\n    \r\n    <div className=\"items\">\r\n      <div className=\"item\">\r\n        <label htmlFor=\"dbname\">Database Name:</label>\r\n        <input type=\"text\"/>\r\n      </div>\r\n\r\n      <div className=\"item\">\r\n        <label htmlFor=\"passeord\">Password:</label>\r\n        <input type=\"text\"/>\r\n      </div>\r\n      <div className=\"item\">\r\n        <label htmlFor=\"port\">Port Number:</label>\r\n        <input type=\"text\"/>\r\n      </div>\r\n    </div>\r\n    <div className=\"submit\">\r\n      <button>Connecter</button>\r\n    </div>\r\n    </form> \r\n    </div>: null}\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default Connect\r\n",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":16,"nodeType":"59","messageId":"60","endLine":1,"endColumn":24},{"ruleId":"61","severity":1,"message":"62","line":37,"column":24,"nodeType":"63","endLine":37,"endColumn":99},{"ruleId":"57","severity":1,"message":"58","line":1,"column":16,"nodeType":"59","messageId":"60","endLine":1,"endColumn":24},{"ruleId":"57","severity":1,"message":"64","line":1,"column":26,"nodeType":"59","messageId":"60","endLine":1,"endColumn":35},{"ruleId":"57","severity":1,"message":"65","line":6,"column":21,"nodeType":"59","messageId":"60","endLine":6,"endColumn":33},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'setShowModal' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]