[{"C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\index.js":"1","C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\App.js":"2","C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\components\\Entete.js":"3","C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\components\\Maincon.js":"4","C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\components\\Sidenav.js":"5","C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\components\\Displayer.js":"6"},{"size":220,"mtime":1610651152760,"results":"7","hashOfConfig":"8"},{"size":232,"mtime":1610654032414,"results":"9","hashOfConfig":"8"},{"size":178,"mtime":1610653721865,"results":"10","hashOfConfig":"8"},{"size":254,"mtime":1610662844963,"results":"11","hashOfConfig":"8"},{"size":1262,"mtime":1610747599688,"results":"12","hashOfConfig":"8"},{"size":742,"mtime":1610752619198,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"2ko5h4",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\index.js",[],["29","30"],"C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\App.js",[],"C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\components\\Entete.js",[],"C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\components\\Maincon.js",[],"C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\components\\Sidenav.js",["31"],"import React, {useEffect, useState} from 'react'\r\nimport Displayer from './Displayer'\r\n\r\nconst Sidenav = () => {\r\n\r\n  const [navlinks, setnavlinks] = useState([]);\r\n  const [clicked, setClicked] = useState([]);\r\n  \r\n  const getnavlinks = async () =>{\r\n    try {\r\n      \r\n      const res = await fetch(\"http://localhost:5000/tables\");\r\n      const jsonres = await res.json();\r\n\r\n         setnavlinks(jsonres)\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  //recuperer dans une variable le nom du lien pour lutilliser pour recuperer les tables\r\n  \r\n  const handleClick = (e) =>{\r\n    //console.log(e.target.getAttribute('value'));\r\n     var appuie = e.target.getAttribute('value');\r\n\r\n     setClicked(appuie);\r\n\r\n    };\r\n\r\n//console.log(clicked);\r\n\r\n   useEffect(() =>{\r\n         \r\n    getnavlinks();\r\n   },[]);\r\n\r\n   //console.log(navlinks)\r\n\r\n   return (\r\n    <div className= \"navbar\">\r\n      <nav>\r\n        <h1>DATABASE TABLES</h1>\r\n        <ul>\r\n        {navlinks.map(lien =>( \r\n       <li><a className=\"lien\" href='#' value={lien.table_name} onClick={handleClick}>{lien.table_name}</a></li>\r\n        ))}\r\n        </ul>\r\n        <Displayer clicked ={clicked}/>\r\n      </nav>\r\n\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidenav\r\n","C:\\Users\\MEGBLETO\\Desktop\\GuiTool\\frontend\\src\\components\\Displayer.js",["32"],"import React, {useState, useEffect}from 'react'\r\n\r\nconst Displayer = (props) => {\r\n  //ici je  recupere la valeur clicked de mon props \r\n\r\n  const clicked = props.clicked;\r\n  console.log(clicked);\r\n\r\n  const [table, getTableContents] = useState([]);\r\n\r\n\r\n   const  fetchtables = async() =>{\r\n\r\n    try {\r\n      const result = await fetch(`http://localhost:5000/singletable/${clicked}`);\r\n\r\n      const res = await result.json();\r\n\r\n      getTableContents(res);\r\n\r\n    } catch (error) {\r\n      console.log(Error.message);\r\n    }\r\n\r\n    \r\n  }\r\n\r\n\r\n  useEffect(() =>{\r\n   fetchtables()\r\n  },[]);\r\n\r\n  console.log(table); \r\n\r\n  return (\r\n    <div className=\"montreur\">\r\n      <h1>Hello World</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Displayer\r\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":46,"column":12,"nodeType":"39","endLine":46,"endColumn":87},{"ruleId":"40","severity":1,"message":"41","line":31,"column":5,"nodeType":"42","endLine":31,"endColumn":7,"suggestions":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchtables'. Either include it or remove the dependency array.","ArrayExpression",["46"],"no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [fetchtables]",{"range":"49","text":"50"},[588,590],"[fetchtables]"]